{"ast":null,"code":"var _jsxFileName = \"/Users/elmir_mirzoiev/FrontEnd/social_network/src/store/Reducers/profileReducer.js\",\n    _this = this;\n\nimport { ADD_POST, SET_USER_STATUS, SET_USER_PROFILE, UPDATE_POST_TEXT } from \"../types\";\nimport { profileAPI } from \"../../API/profileAPI\";\nimport userImg from '../../assets/images/user.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialState = {\n  userProfile: null,\n  userStatus: '',\n  newPostText: '',\n  postData: [{\n    id: 1,\n    img: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: userImg,\n      alt: \"ava\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 18\n    }, this),\n    message: 'It is my first post!',\n    likesCount: 0\n  }, {\n    id: 2,\n    img: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: userImg,\n      alt: \"ava\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 18\n    }, this),\n    message: 'It is my second post!',\n    likesCount: 0\n  }]\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_POST_TEXT:\n      return { ...state,\n        newPostText: action.newText\n      };\n\n    case ADD_POST:\n      let newPost = {\n        id: 3,\n        img: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImg,\n          alt: \"ava\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }, _this),\n        message: state.newPostText,\n        likesCount: 0\n      };\n      return { ...state,\n        postData: [...state.postData, newPost],\n        newPostText: ''\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        userProfile: action.profile\n      };\n\n    case SET_USER_STATUS:\n      return { ...state,\n        userStatus: action.userStatus\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPost = () => ({\n  type: ADD_POST\n});\nexport const updatePostText = text => ({\n  type: UPDATE_POST_TEXT,\n  newText: text\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserStatus = userStatus => ({\n  type: SET_USER_STATUS,\n  userStatus\n});\nexport const setUserProfileThunk = id => {\n  return dispatch => {\n    profileAPI.getProfileData(id).then(data => {\n      setTimeout(() => {\n        dispatch(setUserProfile(data));\n      }, 500);\n    });\n  };\n};\nexport const setUserStatusThunk = id => {\n  return dispatch => {\n    profileAPI.getUserStatus(id).then(data => {\n      dispatch(setUserStatus(data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/elmir_mirzoiev/FrontEnd/social_network/src/store/Reducers/profileReducer.js"],"names":["ADD_POST","SET_USER_STATUS","SET_USER_PROFILE","UPDATE_POST_TEXT","profileAPI","userImg","initialState","userProfile","userStatus","newPostText","postData","id","img","message","likesCount","profileReducer","state","action","type","newText","newPost","profile","addPost","updatePostText","text","setUserProfile","setUserStatus","setUserProfileThunk","dispatch","getProfileData","then","data","setTimeout","setUserStatusThunk","getUserStatus"],"mappings":"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","sourcesContent":["import {ADD_POST, SET_USER_STATUS, SET_USER_PROFILE, UPDATE_POST_TEXT} from \"../types\";\nimport {profileAPI} from \"../../API/profileAPI\";\nimport userImg from '../../assets/images/user.png'\n\nlet initialState = {\n    userProfile: null,\n    userStatus: '',\n    newPostText: '',\n    postData: [\n        {\n            id: 1,\n            img: <img src={userImg} alt='ava'/>,\n            message: 'It is my first post!',\n            likesCount: 0\n        },\n        {\n            id: 2,\n            img: <img src={userImg} alt='ava'/>,\n            message: 'It is my second post!',\n            likesCount: 0\n        }\n    ]\n};\n\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case UPDATE_POST_TEXT:\n            return {\n                ...state,\n                newPostText: action.newText\n            }\n        case ADD_POST:\n            let newPost = {\n                id: 3,\n                img: <img src={userImg} alt='ava'/>,\n                message: state.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                postData: [...state.postData, newPost],\n                newPostText: '',\n            }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                userProfile: action.profile,\n            }\n        case SET_USER_STATUS:\n            return {\n                ...state,\n                userStatus: action.userStatus\n            }\n        default:\n            return state;\n    }\n}\n\nexport const addPost = () => ({type: ADD_POST});\nexport const updatePostText = (text) => ({type: UPDATE_POST_TEXT, newText: text});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setUserStatus = (userStatus) => ({type: SET_USER_STATUS, userStatus})\n\nexport const setUserProfileThunk = (id) => {\n    return (dispatch) => {\n        profileAPI.getProfileData(id)\n            .then(data => {\n                setTimeout(() => {\n                    dispatch(setUserProfile(data))\n                }, 500)\n            })\n    }\n}\n\nexport const setUserStatusThunk = (id) => {\n    return (dispatch) => {\n        profileAPI.getUserStatus(id)\n            .then(data => {\n                dispatch(setUserStatus(data))\n            })\n    }\n}\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}