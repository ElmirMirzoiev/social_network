{"ast":null,"code":"var _jsxFileName = \"/Users/elmir_mirzoiev/FrontEnd/social_network/src/components/ProfilePage/ProfileInfo/ProfileInfoContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport { setUserProfile, setUserStatus, setUserProfileThunk, setUserStatusThunk } from \"../../../store/Reducers/profileReducer\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport MyPosts from \"../MyPosts/MyPosts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileInfoContainer = () => {\n  _s();\n\n  const profileData = useSelector(state => state.profilePage.userProfile);\n  const profilePage = useSelector(state => state.profilePage);\n  const dispatch = useDispatch();\n  const params = useParams();\n  useEffect(() => {\n    dispatch(setUserProfileThunk(params.id));\n    dispatch(setUserStatusThunk(params.id));\n    return function cleanup() {\n      dispatch(setUserProfile(null));\n      dispatch(setUserStatus(null));\n    };\n  }, [dispatch, params]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileInfo, { ...profileData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyPosts, { ...profilePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProfileInfoContainer, \"tQR6Z1/ahfrORFWWdR53037fEHQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useParams];\n});\n\n_c = ProfileInfoContainer;\nexport default ProfileInfoContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfoContainer\");","map":{"version":3,"sources":["/Users/elmir_mirzoiev/FrontEnd/social_network/src/components/ProfilePage/ProfileInfo/ProfileInfoContainer.jsx"],"names":["useDispatch","useSelector","useParams","React","useEffect","setUserProfile","setUserStatus","setUserProfileThunk","setUserStatusThunk","ProfileInfo","MyPosts","ProfileInfoContainer","profileData","state","profilePage","userProfile","dispatch","params","id","cleanup"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,cADJ,EACoBC,aADpB,EAEIC,mBAFJ,EAGIC,kBAHJ,QAIO,wCAJP;AAKA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAE/B,QAAMC,WAAW,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBC,WAA5B,CAA/B;AACA,QAAMD,WAAW,GAAGb,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA/B;AAEA,QAAME,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,MAAM,GAAGf,SAAS,EAAxB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,CAACT,mBAAmB,CAACU,MAAM,CAACC,EAAR,CAApB,CAAR;AACAF,IAAAA,QAAQ,CAACR,kBAAkB,CAACS,MAAM,CAACC,EAAR,CAAnB,CAAR;AACA,WAAO,SAASC,OAAT,GAAmB;AACtBH,MAAAA,QAAQ,CAACX,cAAc,CAAC,IAAD,CAAf,CAAR;AACAW,MAAAA,QAAQ,CAACV,aAAa,CAAC,IAAD,CAAd,CAAR;AACH,KAHD;AAIH,GAPQ,EAON,CAACU,QAAD,EAAWC,MAAX,CAPM,CAAT;AASA,sBACI;AAAA,4BACI,QAAC,WAAD,OAAiBL;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD,OAAaE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAvBD;;GAAMH,oB;UAEkBV,W,EACAA,W,EAEHD,W,EACFE,S;;;KANbS,oB;AAyBN,eAAeA,oBAAf","sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport {\n    setUserProfile, setUserStatus,\n    setUserProfileThunk,\n    setUserStatusThunk\n} from \"../../../store/Reducers/profileReducer\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport MyPosts from \"../MyPosts/MyPosts\";\n\nconst ProfileInfoContainer = () => {\n\n    const profileData = useSelector(state => state.profilePage.userProfile)\n    const profilePage = useSelector(state => state.profilePage)\n\n    const dispatch = useDispatch();\n    const params = useParams();\n\n    useEffect(() => {\n        dispatch(setUserProfileThunk(params.id))\n        dispatch(setUserStatusThunk(params.id))\n        return function cleanup() {\n            dispatch(setUserProfile(null))\n            dispatch(setUserStatus(null))\n        };\n    }, [dispatch, params])\n\n    return (\n        <>\n            <ProfileInfo {...profileData}/>\n            <MyPosts {...profilePage}/>\n        </>\n    )\n}\n\nexport default ProfileInfoContainer;"]},"metadata":{},"sourceType":"module"}