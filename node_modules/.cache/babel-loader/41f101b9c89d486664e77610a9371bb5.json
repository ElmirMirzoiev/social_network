{"ast":null,"code":"import { SET_AUTH_DATA } from \"../types\";\nimport { authAPI } from \"../../API/authAPI\";\nconst initialState = {\n  email: null,\n  login: null,\n  id: null,\n  isAuth: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_AUTH_DATA:\n      return { ...state,\n        ...action.payload,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthData = payload => ({\n  type: SET_AUTH_DATA,\n  payload\n});\nexport const setAuthDataThunk = () => {\n  return dispatch => {\n    authAPI.me().then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setAuthData(response.data));\n      }\n\n      if (response.resultCode === 1) {\n        console.log(response.messages);\n      }\n    });\n  };\n};\nexport const logInThunk = (email, password) => {\n  return dispatch => {\n    authAPI.login(email, password).then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setAuthDataThunk());\n      } else {\n        console.log(response.messages);\n      }\n    });\n  };\n};\nexport const logOutThunk = () => {\n  return dispatch => {\n    authAPI.logout().then(response => {\n      dispatch(setAuthDataThunk());\n      console.log(response);\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/elmir_mirzoiev/FrontEnd/social_network/src/store/Reducers/authReducer.js"],"names":["SET_AUTH_DATA","authAPI","initialState","email","login","id","isAuth","authReducer","state","action","type","payload","setAuthData","setAuthDataThunk","dispatch","me","then","response","resultCode","data","console","log","messages","logInThunk","password","logOutThunk","logout"],"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE,IADa;AAEpBC,EAAAA,KAAK,EAAE,IAFa;AAGpBC,EAAAA,EAAE,EAAE,IAHgB;AAIpBC,EAAAA,MAAM,EAAE;AAJY,CAArB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKV,aAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAEN,WAAGC,MAAM,CAACE,OAFJ;AAGNL,QAAAA,MAAM,EAAE;AAHF,OAAP;;AAKD;AACC,aAAOE,KAAP;AARF;AAUA,CAXD;;AAaA,OAAO,MAAMI,WAAW,GAAID,OAAD,KAAc;AAAED,EAAAA,IAAI,EAAEV,aAAR;AAAuBW,EAAAA;AAAvB,CAAd,CAApB;AAEP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AACrC,SAAQC,QAAD,IAAc;AACpBb,IAAAA,OAAO,CAACc,EAAR,GAAaC,IAAb,CAAmBC,QAAD,IAAc;AAC/B,UAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC9BJ,QAAAA,QAAQ,CAACF,WAAW,CAACK,QAAQ,CAACE,IAAV,CAAZ,CAAR;AACA;;AACD,UAAIF,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC9BE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,QAArB;AACA;AACD,KAPD;AAQA,GATD;AAUA,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAG,CAACpB,KAAD,EAAQqB,QAAR,KAAqB;AAC9C,SAAQV,QAAD,IAAc;AACpBb,IAAAA,OAAO,CAACG,KAAR,CAAcD,KAAd,EAAqBqB,QAArB,EAA+BR,IAA/B,CAAqCC,QAAD,IAAc;AACjD,UAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC9BJ,QAAAA,QAAQ,CAACD,gBAAgB,EAAjB,CAAR;AACA,OAFD,MAEO;AACNO,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,QAArB;AACA;AACD,KAND;AAOA,GARD;AASA,CAVM;AAYP,OAAO,MAAMG,WAAW,GAAG,MAAM;AAChC,SAAQX,QAAD,IAAc;AACpBb,IAAAA,OAAO,CAACyB,MAAR,GAAiBV,IAAjB,CAAuBC,QAAD,IAAc;AACnCH,MAAAA,QAAQ,CAACD,gBAAgB,EAAjB,CAAR;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,KAHD;AAIA,GALD;AAMA,CAPM;AASP,eAAeV,WAAf","sourcesContent":["import { SET_AUTH_DATA } from \"../types\"\nimport { authAPI } from \"../../API/authAPI\"\n\nconst initialState = {\n\temail: null,\n\tlogin: null,\n\tid: null,\n\tisAuth: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_AUTH_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t\tisAuth: true,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const setAuthData = (payload) => ({ type: SET_AUTH_DATA, payload })\n\nexport const setAuthDataThunk = () => {\n\treturn (dispatch) => {\n\t\tauthAPI.me().then((response) => {\n\t\t\tif (response.resultCode === 0) {\n\t\t\t\tdispatch(setAuthData(response.data))\n\t\t\t}\n\t\t\tif (response.resultCode === 1) {\n\t\t\t\tconsole.log(response.messages)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport const logInThunk = (email, password) => {\n\treturn (dispatch) => {\n\t\tauthAPI.login(email, password).then((response) => {\n\t\t\tif (response.resultCode === 0) {\n\t\t\t\tdispatch(setAuthDataThunk())\n\t\t\t} else {\n\t\t\t\tconsole.log(response.messages)\n\t\t\t}\n\t\t})\n\t}\n}\n\nexport const logOutThunk = () => {\n\treturn (dispatch) => {\n\t\tauthAPI.logout().then((response) => {\n\t\t\tdispatch(setAuthDataThunk())\n\t\t\tconsole.log(response)\n\t\t})\n\t}\n}\n\nexport default authReducer\n"]},"metadata":{},"sourceType":"module"}