{"ast":null,"code":"import { ADD_MESSAGE, UPDATE_MESSAGE_TEXT } from \"../types\";\nlet initialState = {\n  newMessageText: '',\n  dialogsData: [{\n    id: 1,\n    name: \"Steve\"\n  }, {\n    id: 2,\n    name: \"Bill\"\n  }, {\n    id: 3,\n    name: \"Steve\"\n  }, {\n    id: 4,\n    name: \"Mark\"\n  }, {\n    id: 5,\n    name: \"Linus\"\n  }],\n  messageBody: [{\n    id: 1,\n    message: \"Hi!\"\n  }, {\n    id: 2,\n    message: \"How are you?\"\n  }, {\n    id: 3,\n    message: \"So?\"\n  }, {\n    id: 4,\n    message: \"What?\"\n  }, {\n    id: 5,\n    message: \"Why?\"\n  }]\n};\n\nconst messagesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_MESSAGE_TEXT:\n      return { ...state,\n        newMessageText: action.newMessageText\n      };\n\n    case ADD_MESSAGE:\n      let newMessage = {\n        id: 7,\n        message: state.newMessageText\n      };\n      let newName = {\n        id: 7,\n        name: 'Steve'\n      };\n      return { ...state,\n        newMessageText: '',\n        messageBody: [...state.messageBody, newMessage],\n        dialogsData: [...state.dialogsData, newName]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addMessageActionCreator = () => {\n  return {\n    type: ADD_MESSAGE\n  };\n};\nexport const updateMessageTextActionCreator = text => {\n  return {\n    type: UPDATE_MESSAGE_TEXT,\n    newMessageText: text\n  };\n};\nexport default messagesReducer;","map":{"version":3,"sources":["/Users/elmir_mirzoiev/FrontEnd/social_network/src/store/Reducers/messagesReducer.js"],"names":["ADD_MESSAGE","UPDATE_MESSAGE_TEXT","initialState","newMessageText","dialogsData","id","name","messageBody","message","messagesReducer","state","action","type","newMessage","newName","addMessageActionCreator","updateMessageTextActionCreator","text"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,mBAArB,QAA+C,UAA/C;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,cAAc,EAAE,EADD;AAEfC,EAAAA,WAAW,EAAE,CACT;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADS,EAET;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFS,EAGT;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHS,EAIT;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAJS,EAKT;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GALS,CAFE;AASfC,EAAAA,WAAW,EAAE,CACT;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GADS,EAET;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAFS,EAGT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAHS,EAIT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAJS,EAKT;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GALS;AATE,CAAnB;;AAkBA,MAAMC,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,mBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHP,QAAAA,cAAc,EAAEQ,MAAM,CAACR;AAFpB,OAAP;;AAIJ,SAAKH,WAAL;AACI,UAAIa,UAAU,GAAG;AACbR,QAAAA,EAAE,EAAE,CADS;AAEbG,QAAAA,OAAO,EAAEE,KAAK,CAACP;AAFF,OAAjB;AAIA,UAAIW,OAAO,GAAG;AACVT,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIA,aAAO,EACH,GAAGI,KADA;AAEHP,QAAAA,cAAc,EAAE,EAFb;AAGHI,QAAAA,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACH,WAAV,EAAuBM,UAAvB,CAHV;AAIHT,QAAAA,WAAW,EAAE,CAAC,GAAGM,KAAK,CAACN,WAAV,EAAuBU,OAAvB;AAJV,OAAP;;AAMJ;AACI,aAAOJ,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,OAAO,MAAMK,uBAAuB,GAAG,MAAM;AACzC,SAAO;AACHH,IAAAA,IAAI,EAAEZ;AADH,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMgB,8BAA8B,GAAIC,IAAD,IAAU;AACpD,SAAO;AACHL,IAAAA,IAAI,EAAEX,mBADH;AAEHE,IAAAA,cAAc,EAAEc;AAFb,GAAP;AAIH,CALM;AAOP,eAAeR,eAAf","sourcesContent":["import {ADD_MESSAGE, UPDATE_MESSAGE_TEXT} from \"../types\";\n\nlet initialState = {\n    newMessageText: '',\n    dialogsData: [\n        {id: 1, name: \"Steve\"},\n        {id: 2, name: \"Bill\"},\n        {id: 3, name: \"Steve\"},\n        {id: 4, name: \"Mark\"},\n        {id: 5, name: \"Linus\"}\n    ],\n    messageBody: [\n        {id: 1, message: \"Hi!\"},\n        {id: 2, message: \"How are you?\"},\n        {id: 3, message: \"So?\"},\n        {id: 4, message: \"What?\"},\n        {id: 5, message: \"Why?\"}\n    ]\n};\n\nconst messagesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_MESSAGE_TEXT:\n            return {\n                ...state,\n                newMessageText: action.newMessageText\n            }\n        case ADD_MESSAGE:\n            let newMessage = {\n                id: 7,\n                message: state.newMessageText\n            };\n            let newName = {\n                id: 7,\n                name: 'Steve'\n            };\n            return {\n                ...state,\n                newMessageText: '',\n                messageBody: [...state.messageBody, newMessage],\n                dialogsData: [...state.dialogsData, newName]\n            }\n        default:\n            return state;\n    }\n}\n\nexport const addMessageActionCreator = () => {\n    return {\n        type: ADD_MESSAGE\n    }\n};\nexport const updateMessageTextActionCreator = (text) => {\n    return {\n        type: UPDATE_MESSAGE_TEXT,\n        newMessageText: text\n    }\n};\n\nexport default messagesReducer;"]},"metadata":{},"sourceType":"module"}